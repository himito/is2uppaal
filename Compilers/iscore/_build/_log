### Starting build.
# Target: src/iscore2ta.ml.depends, tags: { extension:ml, file:src/iscore2ta.ml, ocaml, ocamldep, package(str), quiet }
ocamlfind ocamldep -package str -modules src/iscore2ta.ml > src/iscore2ta.ml.depends
# Target: src/lexer.mll, tags: { extension:mll, file:src/lexer.mll, lexer, ocaml, ocamllex, package(str), quiet }
/usr/local/bin/ocamllex.opt -q src/lexer.mll
# Target: src/lexer.ml.depends, tags: { extension:ml, file:src/lexer.ml, ocaml, ocamldep, package(str), quiet }
ocamlfind ocamldep -package str -modules src/lexer.ml > src/lexer.ml.depends
# Target: src/parser.mly.depends, tags: { extension:mly, file:src/parser.mly, menhir_ocamldep, ocaml, ocamldep, package(str), quiet }
menhir -v --external-tokens Lexer --raw-depend --ocamldep 'ocamlfind ocamldep -modules' src/parser.mly > src/parser.mly.depends
# Target: src/lexer.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:src/lexer.cmo, file:src/lexer.ml, implem, ocaml, package(str), quiet }
ocamlfind ocamlc -c -package str -I src -o src/lexer.cmo src/lexer.ml
# Target: src/types.ml.depends, tags: { extension:ml, file:src/types.ml, ocaml, ocamldep, package(str), quiet }
ocamlfind ocamldep -package str -modules src/types.ml > src/types.ml.depends
# Target: src/types.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:src/types.cmo, file:src/types.ml, implem, ocaml, package(str), quiet }
ocamlfind ocamlc -c -package str -I src -o src/types.cmo src/types.ml
# Target: src/parser.mly, tags: { byte, compile, extension:mly, file:src/parser.mly, menhir, ocaml, package(str), parser, quiet }
menhir -v --external-tokens Lexer --ocamlc 'ocamlfind ocamlc -package str -I src' --infer src/parser.mly
# Target: src/parser.mli.depends, tags: { extension:mli, file:src/parser.mli, ocaml, ocamldep, package(str), quiet }
ocamlfind ocamldep -package str -modules src/parser.mli > src/parser.mli.depends
# Target: src/parser.cmi, tags: { byte, compile, extension:mli, file:src/parser.mli, interf, ocaml, package(str), quiet }
ocamlfind ocamlc -c -package str -I src -o src/parser.cmi src/parser.mli
# Target: src/iscore2ta.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:src/iscore2ta.cmo, file:src/iscore2ta.ml, implem, ocaml, package(str), quiet }
ocamlfind ocamlc -c -package str -I src -o src/iscore2ta.cmo src/iscore2ta.ml
# Target: src/parser.ml.depends, tags: { extension:ml, file:src/parser.ml, ocaml, ocamldep, package(str), quiet }
ocamlfind ocamldep -package str -modules src/parser.ml > src/parser.ml.depends
# Target: src/lexer.cmx, tags: { compile, extension:cmx, extension:ml, file:src/lexer.cmx, file:src/lexer.ml, implem, native, ocaml, package(str), quiet }
ocamlfind ocamlopt -c -package str -I src -o src/lexer.cmx src/lexer.ml
# Target: src/types.cmx, tags: { compile, extension:cmx, extension:ml, file:src/types.cmx, file:src/types.ml, implem, native, ocaml, package(str), quiet }
ocamlfind ocamlopt -c -package str -I src -o src/types.cmx src/types.ml
# Target: src/parser.cmx, tags: { compile, extension:cmx, extension:ml, file:src/parser.cmx, file:src/parser.ml, implem, native, ocaml, package(str), quiet }
ocamlfind ocamlopt -c -package str -I src -o src/parser.cmx src/parser.ml
+ ocamlfind ocamlopt -c -package str -I src -o src/parser.cmx src/parser.ml
File "src/parser.ml", line 44, characters 8-9:
Warning 26: unused variable i.
File "src/parser.ml", line 53, characters 8-9:
Warning 26: unused variable e.
File "src/parser.ml", line 62, characters 8-9:
Warning 26: unused variable a.
File "src/parser.ml", line 1033, characters 104-105:
Warning 26: unused variable c.
# Target: src/iscore2ta.cmx, tags: { compile, extension:cmx, extension:ml, file:src/iscore2ta.cmx, file:src/iscore2ta.ml, implem, native, ocaml, package(str), quiet }
ocamlfind ocamlopt -c -package str -I src -o src/iscore2ta.cmx src/iscore2ta.ml
# Target: src/iscore2ta.native, tags: { dont_link_with, extension:native, file:src/iscore2ta.native, link, native, ocaml, package(str), program, quiet }
ocamlfind ocamlopt -linkpkg -package str src/lexer.cmx src/types.cmx src/parser.cmx src/iscore2ta.cmx -o src/iscore2ta.native
# Compilation successful.
