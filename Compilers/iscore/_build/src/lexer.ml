# 1 "src/lexer.mll"
 
  type token =
    | STRING of string
    | INT of int
    | LESS
    | GREATER
    | SLASH
    | EQ
    | NAME
    | START
    | END
    | SCENARIO
    | AUTOMATION
    | EVENT
    | STARTEVENT
    | ENDEVENT
    | DATE
    | COMMAND
    | ADDRESS
    | INTERVAL
    | DMIN
    | DMAX
    | CONDITION
    | DISPOSE
    | CASE
    | TRIGGER
    | DEFAULT
    | EOF

# 32 "src/lexer.ml"
let __ocaml_lex_tables = {
  Lexing.lex_base = 
   "\000\000\229\255\000\000\001\000\002\000\001\000\008\000\000\000\
    \004\000\008\000\003\000\007\000\249\255\250\255\251\255\252\255\
    \036\000\254\255\003\000\011\000\005\000\248\255\010\000\007\000\
    \006\000\000\000\005\000\007\000\014\000\011\000\242\255\027\000\
    \029\000\001\000\012\000\030\000\022\000\017\000\241\255\024\000\
    \019\000\243\255\035\000\027\000\041\000\025\000\035\000\030\000\
    \245\255\026\000\032\000\035\000\048\000\030\000\042\000\037\000\
    \039\000\244\255\048\000\036\000\038\000\037\000\053\000\240\255\
    \058\000\040\000\052\000\047\000\049\000\000\000\063\000\041\000\
    \052\000\236\255\235\255\051\000\053\000\050\000\065\000\233\255\
    \070\000\052\000\062\000\055\000\230\255\057\000\064\000\075\000\
    \067\000\080\000\068\000\079\000\239\255\075\000\065\000\077\000\
    \072\000\074\000\234\255\084\000\232\255\086\000\073\000\087\000\
    \074\000\075\000\238\255\075\000\091\000\079\000\076\000\098\000\
    \088\000\237\255\092\000\095\000\096\000\099\000\087\000\231\255\
    \002\000\003\000\155\000\255\255\248\255\249\255\250\255\251\255\
    \252\255\253\255\254\255";
  Lexing.lex_backtrk = 
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \002\000\255\255\000\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\008\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\009\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\008\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255";
  Lexing.lex_default = 
   "\255\255\000\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\000\000\000\000\000\000\000\000\
    \255\255\000\000\255\255\255\255\255\255\000\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\000\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\000\000\255\255\
    \255\255\000\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\255\255\255\255\255\255\255\255\255\255\000\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\255\255\255\255\255\255\255\255\000\000\
    \255\255\255\255\255\255\255\255\000\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\000\000\255\255\255\255\255\255\
    \255\255\255\255\000\000\255\255\000\000\255\255\255\255\255\255\
    \255\255\255\255\000\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\255\255\255\255\255\255\255\255\255\255\000\000\
    \121\000\121\000\255\255\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000";
  Lexing.lex_trans = 
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\018\000\018\000\000\000\018\000\018\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \018\000\000\000\017\000\018\000\123\000\255\255\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\000\
    \016\000\016\000\016\000\016\000\016\000\016\000\016\000\016\000\
    \016\000\016\000\000\000\000\000\015\000\012\000\014\000\000\000\
    \000\000\007\000\000\000\000\000\000\000\026\000\034\000\000\000\
    \000\000\003\000\000\000\000\000\000\000\070\000\000\000\000\000\
    \000\000\000\000\000\000\008\000\016\000\016\000\016\000\016\000\
    \016\000\016\000\016\000\016\000\016\000\016\000\122\000\255\255\
    \000\000\004\000\085\000\005\000\006\000\009\000\101\000\042\000\
    \019\000\061\000\021\000\023\000\028\000\058\000\011\000\107\000\
    \086\000\059\000\114\000\010\000\002\000\049\000\032\000\022\000\
    \020\000\024\000\025\000\027\000\029\000\060\000\031\000\030\000\
    \039\000\033\000\035\000\036\000\037\000\038\000\040\000\041\000\
    \043\000\044\000\045\000\046\000\047\000\048\000\050\000\051\000\
    \052\000\053\000\054\000\055\000\056\000\057\000\080\000\075\000\
    \064\000\062\000\063\000\065\000\066\000\067\000\068\000\069\000\
    \071\000\074\000\073\000\076\000\077\000\078\000\079\000\081\000\
    \072\000\082\000\083\000\084\000\099\000\088\000\087\000\093\000\
    \089\000\090\000\091\000\092\000\094\000\095\000\096\000\097\000\
    \098\000\100\000\102\000\103\000\104\000\105\000\106\000\108\000\
    \109\000\110\000\111\000\112\000\113\000\115\000\116\000\117\000\
    \118\000\119\000\130\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\129\000\
    \000\000\000\000\000\000\000\000\000\000\128\000\000\000\000\000\
    \001\000\127\000\255\255\255\255\000\000\000\000\000\000\000\000\
    \000\000\126\000\000\000\000\000\000\000\125\000\000\000\124\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000";
  Lexing.lex_check = 
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\255\255\018\000\018\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\255\255\000\000\018\000\120\000\121\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\255\255\255\255\000\000\000\000\000\000\255\255\
    \255\255\000\000\255\255\255\255\255\255\025\000\033\000\255\255\
    \255\255\000\000\255\255\255\255\255\255\069\000\255\255\255\255\
    \255\255\255\255\255\255\000\000\016\000\016\000\016\000\016\000\
    \016\000\016\000\016\000\016\000\016\000\016\000\120\000\121\000\
    \255\255\000\000\005\000\000\000\000\000\000\000\004\000\008\000\
    \011\000\006\000\020\000\022\000\027\000\006\000\000\000\003\000\
    \005\000\006\000\002\000\000\000\000\000\007\000\009\000\010\000\
    \019\000\023\000\024\000\026\000\028\000\006\000\009\000\029\000\
    \031\000\032\000\034\000\035\000\036\000\037\000\039\000\040\000\
    \042\000\043\000\044\000\045\000\046\000\047\000\049\000\050\000\
    \051\000\052\000\053\000\054\000\055\000\056\000\058\000\059\000\
    \060\000\061\000\062\000\064\000\065\000\066\000\067\000\068\000\
    \070\000\071\000\072\000\075\000\076\000\077\000\078\000\080\000\
    \070\000\081\000\082\000\083\000\085\000\086\000\086\000\087\000\
    \088\000\089\000\090\000\091\000\093\000\094\000\095\000\096\000\
    \097\000\099\000\101\000\102\000\103\000\104\000\105\000\107\000\
    \108\000\109\000\110\000\111\000\112\000\114\000\115\000\116\000\
    \117\000\118\000\122\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\122\000\
    \255\255\255\255\255\255\255\255\255\255\122\000\255\255\255\255\
    \000\000\122\000\120\000\121\000\255\255\255\255\255\255\255\255\
    \255\255\122\000\255\255\255\255\255\255\122\000\255\255\122\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255";
  Lexing.lex_base_code = 
   "";
  Lexing.lex_backtrk_code = 
   "";
  Lexing.lex_default_code = 
   "";
  Lexing.lex_trans_code = 
   "";
  Lexing.lex_check_code = 
   "";
  Lexing.lex_code = 
   "";
}

let rec lex lexbuf =
    __ocaml_lex_lex_rec lexbuf 0
and __ocaml_lex_lex_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 33 "src/lexer.mll"
                             ( lex lexbuf )
# 215 "src/lexer.ml"

  | 1 ->
# 34 "src/lexer.mll"
                             ( read_string (Buffer.create 20) lexbuf )
# 220 "src/lexer.ml"

  | 2 ->
let
# 35 "src/lexer.mll"
                           i
# 226 "src/lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 35 "src/lexer.mll"
                             ( INT (int_of_string (i)) )
# 230 "src/lexer.ml"

  | 3 ->
# 36 "src/lexer.mll"
                             ( LESS )
# 235 "src/lexer.ml"

  | 4 ->
# 37 "src/lexer.mll"
                             ( GREATER )
# 240 "src/lexer.ml"

  | 5 ->
# 38 "src/lexer.mll"
                             ( SLASH)
# 245 "src/lexer.ml"

  | 6 ->
# 39 "src/lexer.mll"
                             ( EQ )
# 250 "src/lexer.ml"

  | 7 ->
# 40 "src/lexer.mll"
                             ( NAME )
# 255 "src/lexer.ml"

  | 8 ->
# 41 "src/lexer.mll"
                             ( START )
# 260 "src/lexer.ml"

  | 9 ->
# 42 "src/lexer.mll"
                             ( END )
# 265 "src/lexer.ml"

  | 10 ->
# 44 "src/lexer.mll"
                             ( SCENARIO )
# 270 "src/lexer.ml"

  | 11 ->
# 46 "src/lexer.mll"
                             ( AUTOMATION )
# 275 "src/lexer.ml"

  | 12 ->
# 48 "src/lexer.mll"
                             ( EVENT )
# 280 "src/lexer.ml"

  | 13 ->
# 49 "src/lexer.mll"
                             ( STARTEVENT )
# 285 "src/lexer.ml"

  | 14 ->
# 50 "src/lexer.mll"
                             ( ENDEVENT )
# 290 "src/lexer.ml"

  | 15 ->
# 51 "src/lexer.mll"
                             ( DATE )
# 295 "src/lexer.ml"

  | 16 ->
# 53 "src/lexer.mll"
                             ( COMMAND )
# 300 "src/lexer.ml"

  | 17 ->
# 54 "src/lexer.mll"
                             ( ADDRESS )
# 305 "src/lexer.ml"

  | 18 ->
# 56 "src/lexer.mll"
                             ( INTERVAL )
# 310 "src/lexer.ml"

  | 19 ->
# 57 "src/lexer.mll"
                             ( DMIN )
# 315 "src/lexer.ml"

  | 20 ->
# 58 "src/lexer.mll"
                             ( DMAX )
# 320 "src/lexer.ml"

  | 21 ->
# 60 "src/lexer.mll"
                             ( CONDITION )
# 325 "src/lexer.ml"

  | 22 ->
# 61 "src/lexer.mll"
                             ( DISPOSE )
# 330 "src/lexer.ml"

  | 23 ->
# 63 "src/lexer.mll"
                             ( CASE )
# 335 "src/lexer.ml"

  | 24 ->
# 64 "src/lexer.mll"
                             ( TRIGGER )
# 340 "src/lexer.ml"

  | 25 ->
# 65 "src/lexer.mll"
                             ( DEFAULT )
# 345 "src/lexer.ml"

  | 26 ->
# 66 "src/lexer.mll"
                             ( EOF )
# 350 "src/lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; 
      __ocaml_lex_lex_rec lexbuf __ocaml_lex_state

and read_string buf lexbuf =
    __ocaml_lex_read_string_rec buf lexbuf 120
and __ocaml_lex_read_string_rec buf lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 72 "src/lexer.mll"
              ( STRING (Buffer.contents buf) )
# 362 "src/lexer.ml"

  | 1 ->
# 73 "src/lexer.mll"
              ( Buffer.add_char buf '/'; read_string buf lexbuf )
# 367 "src/lexer.ml"

  | 2 ->
# 74 "src/lexer.mll"
              ( Buffer.add_char buf '\\'; read_string buf lexbuf )
# 372 "src/lexer.ml"

  | 3 ->
# 75 "src/lexer.mll"
              ( Buffer.add_char buf '\b'; read_string buf lexbuf )
# 377 "src/lexer.ml"

  | 4 ->
# 76 "src/lexer.mll"
              ( Buffer.add_char buf '\012'; read_string buf lexbuf )
# 382 "src/lexer.ml"

  | 5 ->
# 77 "src/lexer.mll"
              ( Buffer.add_char buf '\n'; read_string buf lexbuf )
# 387 "src/lexer.ml"

  | 6 ->
# 78 "src/lexer.mll"
              ( Buffer.add_char buf '\r'; read_string buf lexbuf )
# 392 "src/lexer.ml"

  | 7 ->
# 79 "src/lexer.mll"
              ( Buffer.add_char buf '\t'; read_string buf lexbuf )
# 397 "src/lexer.ml"

  | 8 ->
# 81 "src/lexer.mll"
    ( Buffer.add_string buf (Lexing.lexeme lexbuf);
      read_string buf lexbuf
    )
# 404 "src/lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; 
      __ocaml_lex_read_string_rec buf lexbuf __ocaml_lex_state

;;

