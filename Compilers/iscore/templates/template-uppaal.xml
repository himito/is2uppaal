<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_1.dtd'>

<nta>
  // ****************************** DECLARATIONS ******************************
  <declaration>
    // ----------------------------------------------------------------
    //                   Auxiliar Declarations
    // ----------------------------------------------------------------
    clock global_clk;  // global clock

    // ----------------------------------------------------------------
    //                        External Events
    // ----------------------------------------------------------------
    const int EVENTS = 4;               // # of events
    typedef int[0,EVENTS-1] event_t;
    int msg[event_t];                   // messages of events
    bool en[event_t];                   // enable event
    broadcast chan event[event_t];      // channels for events

    // ----------------------------------------------------------------
    //                        Multimedia Processes
    // ----------------------------------------------------------------
    const int PROCESSES = 0;                // # of multimedia processes
    typedef int[0, PROCESSES -1] process_t;
    int data[process_t];                    // data sent to multimedia processes
    broadcast chan send[process_t];         // channels for multimedia processes

    // ----------------------------------------------------------------
    //                       Intervals
    // ----------------------------------------------------------------
    const int INTERVALS = 13;               // # of intervals
    typedef int[0,INTERVALS-1] interval_t;
    broadcast chan startedI[interval_t];
    broadcast chan stoppedI[interval_t];
    broadcast chan skippedI[interval_t];

    // ----------------------------------------------------------------
    //                        Interaction Points
    // ----------------------------------------------------------------
    const int POINTS = 4;               // # of interaction points
    typedef int[0, POINTS-1] point_t;
    broadcast chan startP[point_t];
    broadcast chan stopP[point_t];
    broadcast chan skippedP[point_t];
    broadcast chan stoppedP[point_t];

    // function to evaluate the condition 
    bool condition(point_t id, int msg) {
    if (id == 0){ return msg == 1; }
    if (id == 1){ return msg == 1; }
    if (id == 2){ return msg &gt;10; }
    if (id == 3){ return msg &lt;=10; }
    return false;
    }

    // ----------------------------------------------------------------
    //                        Temporal Objects
    // ----------------------------------------------------------------
    const int TOs = 9;                  // # of temporal objects
    typedef int[0, TOs-1] tos_t;
    broadcast chan startedTO[tos_t];
    broadcast chan stoppedTO[tos_t];
    broadcast chan skippedTO[tos_t];
    broadcast chan killedTO[tos_t];


    // ----------------------------------------------------------------
    //              Controls to Handle Several Intervals
    // ----------------------------------------------------------------
    const int CONTROLS = 3;                  // # of controls
    typedef int[0, CONTROLS-1] control_t; 
    broadcast chan startC[control_t];
    broadcast chan skipC[control_t];
    broadcast chan skippedC[control_t];
    broadcast chan stoppedC[control_t];

  </declaration>


  // ****************************** TEMPLATES ******************************

  // ----------------------------------------------------------------
  //             Template for Events 
  // ----------------------------------------------------------------
  <template> 
    <name x="5" y="5">Event</name>
    <parameter>event_t id, int date, int val</parameter>
    <declaration>clock t;</declaration>

    <location id="id0" x="-8" y="-32">
      <committed/>
    </location>

    <location id="id1" x="112" y="-32">
      <name x="88" y="-64">stopped</name>
    </location>

    <location id="id2" x="-152" y="-32">
      <name x="-176" y="-64">waiting</name>
      <label kind="invariant" x="-184" y="-16">t &lt;= date</label>
    </location>

    <init ref="id2"/>

    <transition>
      <source ref="id0"/>
      <target ref="id1"/>
      <label kind="synchronisation" x="16" y="-48">event[id]!</label>
    </transition>

    <transition>
      <source ref="id2"/>
      <target ref="id0"/>
      <label kind="guard" x="-120" y="-48">t == date</label>
      <label kind="assignment" x="-136" y="-32">msg[id] = val</label>
    </transition>
  </template>

  // ----------------------------------------------------------------
  //             Template for Multimedia Processes 
  // ----------------------------------------------------------------
  <template>
    <name>Multimedia</name>
    <parameter>process_t id, int data1, int data2, broadcast chan &amp;start, broadcast chan &amp;stop, broadcast chan &amp;skip, broadcast chan &amp;kill</parameter>

    <location id="id3" x="112" y="64">
      <committed/>
    </location>

    <location id="id4" x="360" y="0">
      <name x="336" y="-32">stopped</name>
    </location>

    <location id="id5" x="192" y="0">
      <committed/>
    </location>

    <location id="id6" x="112" y="0">
      <name x="88" y="-32">waiting</name>
    </location>

    <location id="id7" x="-40" y="0">
      <committed/>
    </location>

    <location id="id8" x="-120" y="0">
      <name x="-136" y="-32">idle</name>
    </location>

    <init ref="id8"/>

    <transition>
      <source ref="id3"/>
      <target ref="id4"/>
      <nail x="360" y="64"/>
    </transition>

    <transition>
      <source ref="id6"/>
      <target ref="id3"/>
      <label kind="synchronisation" x="120" y="24">kill?</label>
    </transition>

    <transition>
      <source ref="id8"/>
      <target ref="id4"/>
      <label kind="synchronisation" x="88" y="-80">skip?</label>
      <nail x="-48" y="-64"/>
      <nail x="312" y="-64"/>
    </transition>

    <transition>
      <source ref="id8"/>
      <target ref="id3"/>
      <label kind="synchronisation" x="-8" y="48">kill?</label>
      <nail x="-120" y="64"/>
      <nail x="72" y="64"/>
    </transition>

    <transition>
      <source ref="id5"/>
      <target ref="id4"/>
      <label kind="synchronisation" x="248" y="-16">send[id]!</label>
      <label kind="assignment" x="216" y="0">data[id] = data2</label>
    </transition>

    <transition>
      <source ref="id6"/>
      <target ref="id5"/>
      <label kind="synchronisation" x="128" y="-16">stop?</label>
    </transition>

    <transition>
      <source ref="id7"/>
      <target ref="id6"/>
      <label kind="synchronisation" x="-8" y="-16">send[id]!</label>
      <label kind="assignment" x="-24" y="0">data[id] = data1</label>
    </transition>

    <transition>
      <source ref="id8"/>
      <target ref="id7"/>
      <label kind="synchronisation" x="-104" y="-16">start?</label>
    </transition>
  </template>


  // ----------------------------------------------------------------
  //             Template for Rigid Intervals/Textures
  // ----------------------------------------------------------------
  <template>
    <name>Rigid</name>
    <parameter>int dur, broadcast chan &amp;launch, broadcast chan &amp;start, broadcast chan &amp;stop, broadcast chan &amp;skip_p, broadcast chan &amp;kill_p, broadcast chan &amp;skip</parameter>
    <declaration>clock t;</declaration>

    <location id="id9" x="-48" y="-64">
      <committed/>
    </location>

    <location id="id10" x="-32" y="72">
      <committed/>
    </location>

    <location id="id11" x="72" y="8">
      <name x="48" y="-24">stopped</name>
    </location>

    <location id="id12" x="-32" y="8">
      <name x="-48" y="-24">waiting</name>
      <label kind="invariant" x="-64" y="16">t &lt;= dur</label>
    </location>

    <location id="id13" x="-120" y="8">
      <name x="-144" y="-24">started</name>
      <committed/>
    </location>

    <location id="id14" x="-208" y="8">
      <name x="-218" y="-22">idle</name>
    </location>

    <init ref="id14"/>

    <transition>
      <source ref="id9"/>
      <target ref="id11"/>
      <label kind="synchronisation" x="0" y="-80">skip!</label>
      <nail x="72" y="-64"/>
    </transition>

    <transition>
      <source ref="id14"/>
      <target ref="id9"/>
      <label kind="synchronisation" x="-176" y="-80">skip_p?</label>
      <nail x="-208" y="-64"/>
    </transition>

    <transition>
      <source ref="id10"/>
      <target ref="id11"/>
      <label kind="synchronisation" x="24" y="72">stop!</label>
      <nail x="72" y="72"/>
    </transition>

    <transition>
      <source ref="id12"/>
      <target ref="id10"/>
      <label kind="synchronisation" x="-24" y="32">kill_p?</label>
    </transition>

    <transition>
      <source ref="id14"/>
      <target ref="id10"/>
      <label kind="synchronisation" x="-168" y="72">kill_p?</label>
      <nail x="-208" y="72"/>
    </transition>

    <transition>
      <source ref="id12"/>
      <target ref="id11"/>
      <label kind="guard" x="-8" y="-8">t==dur</label>
      <label kind="synchronisation" x="0" y="8">stop!</label>
    </transition>

    <transition>
      <source ref="id13"/>
      <target ref="id12"/>
      <label kind="synchronisation" x="-96" y="-8">start!</label>
    </transition>

    <transition>
      <source ref="id14"/>
      <target ref="id13"/>
      <label kind="synchronisation" x="-192" y="-8">launch?</label>
      <label kind="assignment" x="-176" y="8">t=0</label>
      <nail x="-136" y="8"/><nail x="-136" y="8"/>
    </transition>
  </template>


  // ----------------------------------------------------------------
  //     Template for Flexible Intervals//Textures/Structures
  // ----------------------------------------------------------------
  <template> 
    <name>Flexible</name>
    <parameter>int dmin, int dmax, bool finite, broadcast chan &amp;launch, broadcast chan &amp;start, broadcast chan &amp;min, broadcast chan &amp;timeout, broadcast chan &amp;stop, broadcast chan &amp;skip_p, broadcast chan &amp;kill_p, broadcast chan &amp;skip, broadcast chan &amp;kill</parameter>
    <declaration>clock t;</declaration>

    <location id="id15" x="152" y="40">
      <name x="112" y="8">waiting_max_i</name>
    </location>

    <location id="id16" x="424" y="-24">
      <name x="392" y="-56">stopped</name>
    </location>

    <location id="id17" x="320" y="-24">
      <committed/>
    </location>

    <location id="id18" x="8" y="104">
      <committed/>
    </location>

    <location id="id19" x="16" y="-136">
      <committed/>
    </location>

    <location id="id20" x="136" y="-24">
      <name x="96" y="-56">waiting_max_f</name>
      <label kind="invariant" x="104" y="-16">t&lt;=dmax</label>
    </location>

    <location id="id21" x="8" y="-24">
      <name x="-32" y="-56">waiting_min</name>
      <label kind="invariant" x="-24" y="-16">t&lt;=dmin</label>
    </location>

    <location id="id22" x="-96" y="-24">
      <committed/>
    </location>

    <location id="id23" x="-192" y="-24">
      <name x="-202" y="-54">idle</name>
    </location>

    <init ref="id23"/>

    <transition>
      <source ref="id15"/>
      <target ref="id18"/>
      <label kind="synchronisation" x="160" y="64">kill_p?</label>
      <nail x="152" y="80"/>
    </transition>

    <transition>
      <source ref="id15"/>
      <target ref="id17"/>
      <label kind="synchronisation" x="240" y="8">timeout?</label>
    </transition>

    <transition>
      <source ref="id21"/>
      <target ref="id15"/>
      <label kind="guard" x="24" y="16">t==dmin &amp;&amp; finite == false</label>
      <label kind="synchronisation" x="64" y="24">min!</label>
    </transition>

    <transition>
      <source ref="id20"/>
      <target ref="id17"/>
      <label kind="guard" x="200" y="-80">t==dmax</label>
      <nail x="152" y="-64"/>
      <nail x="280" y="-64"/>
      <nail x="312" y="-64"/>
    </transition>

    <transition>
      <source ref="id18"/>
      <target ref="id16"/>
      <label kind="synchronisation" x="392" y="48">kill!</label>
      <nail x="424" y="104"/>
    </transition>

    <transition>
      <source ref="id19"/>
      <target ref="id16"/>
      <label kind="synchronisation" x="240" y="-152">skip!</label>
      <nail x="424" y="-136"/>
    </transition>

    <transition>
      <source ref="id23"/>
      <target ref="id19"/>
      <label kind="synchronisation" x="-152" y="-152">skip_p?</label>
      <nail x="-192" y="-136"/>
    </transition>

    <transition>
      <source ref="id17"/>
      <target ref="id16"/>
      <label kind="synchronisation" x="368" y="-40">stop!</label>
    </transition>

    <transition>
      <source ref="id20"/>
      <target ref="id17"/>
      <label kind="synchronisation" x="208" y="-40">timeout?</label>
    </transition>

    <transition>
      <source ref="id20"/>
      <target ref="id18"/>
      <label kind="synchronisation" x="48" y="56">kill_p?</label>
      <nail x="120" y="64"/>
    </transition>

    <transition>
      <source ref="id21"/>
      <target ref="id20"/>
      <label kind="guard" x="0" y="-40">t==dmin &amp;&amp; finite == true</label>
      <label kind="synchronisation" x="56" y="-24">min!</label>
    </transition>

    <transition>
      <source ref="id23"/>
      <target ref="id18"/>
      <label kind="synchronisation" x="-184" y="48">kill_p?</label>
      <nail x="-192" y="104"/>
    </transition>

    <transition>
      <source ref="id21"/>
      <target ref="id18"/>
      <label kind="synchronisation" x="-40" y="40">kill_p?</label>
    </transition>

    <transition>
      <source ref="id22"/>
      <target ref="id21"/>
      <label kind="synchronisation" x="-64" y="-40">start!</label>
    </transition>

    <transition>
      <source ref="id23"/>
      <target ref="id22"/>
      <label kind="synchronisation" x="-168" y="-40">launch?</label>
      <label kind="assignment" x="-152" y="-24">t=0</label>
    </transition>
  </template>


  // ----------------------------------------------------------------
  //     Template for Mixing Signals in Structures
  // ----------------------------------------------------------------
  <template>
    <name>Mix</name>
    <parameter>broadcast chan &amp;stop, broadcast chan &amp;skip, broadcast chan &amp;kill</parameter>

    <location id="id24" x="-24" y="-32">
      <name x="-48" y="-56">stopped</name>
    </location>

    <location id="id25" x="-120" y="-32">
      <committed/>
    </location>

    <location id="id26" x="-208" y="-32">
      <name x="-218" y="-62">idle</name>
    </location>

    <init ref="id26"/>

    <transition>
      <source ref="id26"/>
      <target ref="id24"/>
      <label kind="synchronisation" x="-128" y="-88">skip?</label>
      <nail x="-208" y="-72"/>
      <nail x="-24" y="-72"/>
    </transition>

    <transition>
      <source ref="id26"/>
      <target ref="id24"/>
      <label kind="synchronisation" x="-128" y="8">kill?</label>
      <nail x="-208" y="8"/>
      <nail x="-24" y="8"/>
    </transition>

    <transition>
      <source ref="id25"/>
      <target ref="id24"/>
      <label kind="synchronisation" x="-88" y="-48">kill!</label>
    </transition>

    <transition>
      <source ref="id26"/>
      <target ref="id25"/>
      <label kind="synchronisation" x="-184" y="-48">stop?</label>
    </transition>
  </template>

  // ----------------------------------------------------------------
  //     Template for Controlling Several Intervals 
  // ----------------------------------------------------------------
  <template>
    <name>Control</name>
    <parameter>int n,  broadcast chan &amp;min, broadcast chan &amp;skip_p, broadcast chan &amp;skip, broadcast chan &amp;launch, broadcast chan &amp;kill</parameter>

    <declaration>int counter = 0; bool skip_v = true;</declaration>

    <location id="id27" x="200" y="-40">
      <name x="190" y="-70">stopped</name>
    </location>

    <location id="id28" x="-48" y="-40">
      <committed/>
    </location>

    <location id="id29" x="-240" y="-40">
      <name x="-250" y="-70">idle</name>
    </location>

    <init ref="id29"/>

    <transition>
      <source ref="id29"/>
      <target ref="id27"/>
      <label kind="synchronisation" x="-16" y="32">kill?</label>
      <nail x="-240" y="32"/>
      <nail x="200" y="32"/>
    </transition>

    <transition>
      <source ref="id28"/>
      <target ref="id29"/>
      <label kind="guard" x="-200" y="0">counter&lt; n</label>
      <nail x="-64" y="0"/>
      <nail x="-224" y="0"/>
    </transition>

    <transition>
      <source ref="id29"/><target ref="id28"/>
      <label kind="synchronisation" x="-168" y="-104">min?</label>
      <label kind="assignment" x="-232" y="-88">counter++, skip_v = false</label>
      <nail x="-224" y="-72"/><nail x="-80" y="-72"/>
    </transition>

    <transition>
      <source ref="id28"/>
      <target ref="id27"/>
      <label kind="guard" x="-8" y="-104">counter==n &amp;&amp; skip_v==true</label>
      <label kind="synchronisation" x="56" y="-88">skip!</label>
      <nail x="-48" y="-88"/>
      <nail x="200" y="-88"/>
      <nail x="200" y="-56"/>
    </transition>

    <transition>
      <source ref="id28"/>
      <target ref="id27"/>
      <label kind="guard" x="-32" y="-56">counter==n &amp;&amp; skip_v == false</label>
      <label kind="synchronisation" x="40" y="-40">launch!</label>
    </transition>

    <transition>
      <source ref="id29"/>
      <target ref="id28"/>
      <label kind="synchronisation" x="-160" y="-56">skip_p?</label>
      <label kind="assignment" x="-176" y="-40">counter++</label>
    </transition>
  </template>


  // ----------------------------------------------------------------
  //     Template for Interaction Points
  // ----------------------------------------------------------------
  <template>
    <name>Point</name>
    <parameter>point_t id, event_t id_e, bool urg, broadcast chan &amp;launch, broadcast chan &amp;skip_p, broadcast chan &amp;stop, broadcast chan &amp;kill_p, broadcast chan &amp;skip,  broadcast chan &amp;start</parameter>
    <declaration>bool cond;</declaration>

    <location id="id30" x="-216" y="112">
      <committed/>
    </location>
    <location id="id31" x="-272" y="-88">
      <committed/>
    </location>

    <location id="id32" x="128" y="16">
      <name x="96" y="-16">stopped</name>
    </location>

    <location id="id33" x="-32" y="16">
      <committed/>
    </location>

    <location id="id34" x="-272" y="16">
      <name x="-320" y="-16">waiting_event</name>
    </location>

    <location id="id35" x="-376" y="16">
      <name x="-386" y="-14">idle</name>
    </location><init ref="id35"/>

    <transition>
      <source ref="id34"/>
      <target ref="id34"/>
      <label kind="guard" x="-352" y="232">condition(id,msg[id_e]) == false</label>
      <label kind="synchronisation" x="-280" y="248">event[id_e]?</label>
      <nail x="-328" y="56"/>
      <nail x="-272" y="88"/>
    </transition>

    <transition>
      <source ref="id35"/>
      <target ref="id32"/>
      <label kind="synchronisation" x="-152" y="160">kill_p ?</label>
      <nail x="-376" y="152"/>
      <nail x="128" y="152"/>
    </transition>

    <transition>
      <source ref="id35"/>
      <target ref="id30"/>
      <label kind="synchronisation" x="-312" y="112">stop?</label>
      <nail x="-336" y="112"/>
    </transition>

    <transition>
      <source ref="id30"/>
      <target ref="id32"/>
      <label kind="guard" x="-16" y="96">urg==false</label>
      <label kind="synchronisation" x="0" y="112">skip!</label>
      <nail x="72" y="112"/>
    </transition>

    <transition>
      <source ref="id30"/>
      <target ref="id32"/>
      <label kind="guard" x="-96" y="72">urg == true</label>
      <label kind="synchronisation" x="-88" y="56">start!</label>
      <nail x="16" y="72"/>
    </transition>

    <transition>
      <source ref="id34"/>
      <target ref="id30"/>
      <label kind="guard" x="-256" y="40">en[id_e]==true</label>
      <label kind="synchronisation" x="-232" y="56">stop?</label>
    </transition>

    <transition>
      <source ref="id31"/>
      <target ref="id32"/>
      <label kind="synchronisation" x="-152" y="-104">skip!</label>
      <nail x="128" y="-88"/>
    </transition>

    <transition>
      <source ref="id35"/>
      <target ref="id31"/>
      <label kind="synchronisation" x="-360" y="-104">skip_p?</label>
      <nail x="-376" y="-88"/>
    </transition>

    <transition>
      <source ref="id34"/>
      <target ref="id31"/>
      <label kind="guard" x="-264" y="-72">en[id_e] == false</label>
      <label kind="synchronisation" x="-264" y="-56">stop ?</label>
    </transition>

    <transition>
      <source ref="id33"/>
      <target ref="id32"/>
      <label kind="synchronisation" x="16" y="0">start!</label>
    </transition>

    <transition>
      <source ref="id34"/>
      <target ref="id33"/>
      <label kind="guard" x="-264" y="16">condition(id, msg[id_e]) == true</label>
      <label kind="synchronisation" x="-248" y="0">event[id_e] ?</label>
      <label kind="assignment" x="-160" y="0">en[id_e]=false</label>
      <nail x="-256" y="16"/>
    </transition>

    <transition>
      <source ref="id35"/>
      <target ref="id34"/>
      <label kind="synchronisation" x="-352" y="0">launch?</label>
      <label kind="assignment" x="-368" y="16">en[id_e]=true</label>
    </transition>
  </template>


  // ****************************** SYSTEM ******************************
  <system>
    // Place template instantiations here.
  </system>
</nta>
