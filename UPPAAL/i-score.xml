<?xml version="1.0" encoding="utf-8"?><!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_1.dtd'><nta><declaration>/*
 * Operational Semantics of interactive scores.
 * Author: Jaime Arias Almeida (jaime.arias@labri.fr)
 * Institution : LaBRI (Laboratoire Bordelaise de Recherche en Informatique), Universit√© de Bordeaux.
 * Version 0.1
*/

clock time; 					// global clock

const int RELATIONS = 4; 			// # relations
const int BOXES = 6;    			// # boxes
const int INTERACTION_POINTS = 3;		// # interaction points



typedef int[0, BOXES-1] id_b; 
typedef int[0, INTERACTION_POINTS-1] id_ip;

int eventValue[id_ip];					// Value of the event
int boxDisable[id_b];

broadcast chan startBox[id_b], endBox[id_b], timeOut[id_b], timeMin[id_b];	// messages emmited by boxes and relations

broadcast chan startRel[id_b], endRel[id_b];

broadcast chan external[id_ip];			// meessages emmited by interaction points

broadcast chan endH[id_ip];

broadcast chan skip[id_b];

broadcast chan listenEvent[id_b];





</declaration><template><name>Interval_i</name><parameter>const id_b from, const id_b to, const int min, const int max</parameter><declaration>clock t; // local clock</declaration><location id="id0" x="-344" y="-136"><committed/></location><location id="id1" x="-8" y="-248"></location><location id="id2" x="-464" y="-248"><name x="-488" y="-280">w_min</name><label kind="invariant" x="-496" y="-232">t &lt;= min</label></location><location id="id3" x="-272" y="-248"><name x="-296" y="-280">w_max</name><label kind="invariant" x="-304" y="-232">t &lt;= max</label></location><location id="id4" x="-600" y="-248"><name x="-610" y="-278">wait</name></location><init ref="id4"/><transition><source ref="id0"/><target ref="id1"/><label kind="synchronisation" x="-200" y="-136">skip[to]!</label><nail x="-8" y="-136"/></transition><transition><source ref="id4"/><target ref="id0"/><label kind="synchronisation" x="-528" y="-128">skip[from]?</label><nail x="-600" y="-136"/></transition><transition><source ref="id3"/><target ref="id1"/><label kind="synchronisation" x="-176" y="-312">timeOut[to]?</label><nail x="-232" y="-296"/><nail x="-24" y="-296"/></transition><transition><source ref="id3"/><target ref="id1"/><label kind="synchronisation" x="-168" y="-216">startBox[to]?</label><label kind="assignment" x="-136" y="-200">t = 0</label><nail x="-184" y="-200"/><nail x="-48" y="-200"/></transition><transition><source ref="id3"/><target ref="id1"/><label kind="guard" x="-232" y="-264">t == max</label><label kind="synchronisation" x="-152" y="-264">timeOut[to]!</label><label kind="assignment" x="-168" y="-248">t = 0</label></transition><transition><source ref="id2"/><target ref="id3"/><label kind="guard" x="-408" y="-264">t == min</label><label kind="synchronisation" x="-424" y="-248">timeMin[to]!</label></transition><transition><source ref="id4"/><target ref="id2"/><label kind="synchronisation" x="-576" y="-264">endBox[from]?</label><label kind="assignment" x="-560" y="-248">t = 0</label></transition></template><template><name>Box_r</name><parameter>const id_b id, const int dur, const id_b p</parameter><declaration>clock x;</declaration><location id="id5" x="-720" y="-104"><committed/></location><location id="id6" x="-880" y="-224"></location><location id="id7" x="-568" y="-224"></location><location id="id8" x="-720" y="-224"><label kind="invariant" x="-752" y="-208">x &lt;= dur</label></location><init ref="id6"/><transition><source ref="id6"/><target ref="id5"/><label kind="synchronisation" x="-856" y="-104">skip[id]?</label><nail x="-880" y="-104"/></transition><transition><source ref="id5"/><target ref="id7"/><nail x="-632" y="-104"/></transition><transition><source ref="id8"/><target ref="id5"/><label kind="synchronisation" x="-712" y="-176">endBox[p]?</label></transition><transition><source ref="id6"/><target ref="id5"/><label kind="synchronisation" x="-864" y="-168">endBox[p]?</label></transition><transition><source ref="id6"/><target ref="id8"/><label kind="synchronisation" x="-860" y="-239">startBox[id]?</label><label kind="assignment" x="-816" y="-224">x = 0</label></transition><transition><source ref="id8"/><target ref="id7"/><label kind="guard" x="-672" y="-240">x == dur</label><label kind="synchronisation" x="-680" y="-224">endBox[id]!</label><label kind="assignment" x="-656" y="-208">x = 0</label></transition></template><template><name>Event</name><parameter>const int date, const id_ip a, const int value</parameter><declaration>clock t;</declaration><location id="id9" x="-296" y="-200"></location><location id="id10" x="-760" y="-200"><urgent/></location><location id="id11" x="-440" y="-200"><committed/></location><location id="id12" x="-664" y="-200"><label kind="invariant" x="-674" y="-185">t &lt;= date</label></location><init ref="id10"/><transition><source ref="id11"/><target ref="id9"/><label kind="synchronisation" x="-408" y="-216">external[a]!</label></transition><transition><source ref="id10"/><target ref="id12"/><label kind="assignment" x="-736" y="-200">t = 0</label></transition><transition><source ref="id12"/><target ref="id11"/><label kind="guard" x="-600" y="-200">t == date</label><label kind="assignment" x="-648" y="-224">t = 0, eventValue[a] =value</label></transition></template><template><name>Merge_i</name><parameter>const id_b id_s, const id_ip a, const int n</parameter><declaration>int counter = 0;
bool pass = true;</declaration><location id="id13" x="-552" y="-176"><committed/></location><location id="id14" x="-488" y="-120"></location><location id="id15" x="-488" y="-248"></location><location id="id16" x="-832" y="-176"></location><location id="id17" x="-160" y="-248"></location><location id="id18" x="-344" y="-248"><committed/></location><location id="id19" x="-688" y="-176"><committed/></location><init ref="id16"/><transition><source ref="id19"/><target ref="id13"/><label kind="guard" x="-672" y="-200">counter == n</label></transition><transition><source ref="id13"/><target ref="id14"/><label kind="guard" x="-616" y="-152">pass == true</label><label kind="synchronisation" x="-600" y="-136">skip[id_s]!</label></transition><transition><source ref="id16"/><target ref="id19"/><label kind="synchronisation" x="-808" y="-128">skip[id_s]?</label><label kind="assignment" x="-808" y="-112">counter++</label><nail x="-832" y="-112"/><nail x="-688" y="-112"/></transition><transition><source ref="id13"/><target ref="id15"/><label kind="guard" x="-608" y="-240">pass == false</label></transition><transition><source ref="id19"/><target ref="id16"/><label kind="guard" x="-808" y="-232">counter &lt; n</label><nail x="-688" y="-216"/><nail x="-832" y="-216"/></transition><transition><source ref="id16"/><target ref="id19"/><label kind="synchronisation" x="-808" y="-192">timeMin[id_s]?</label><label kind="assignment" x="-820" y="-176">counter++, pass = false</label></transition><transition><source ref="id18"/><target ref="id17"/><label kind="synchronisation" x="-304" y="-264">startBox[id_s]!</label></transition><transition><source ref="id15"/><target ref="id18"/><label kind="synchronisation" x="-456" y="-208">timeOut[id_s]?</label><nail x="-488" y="-216"/><nail x="-344" y="-216"/></transition><transition><source ref="id15"/><target ref="id18"/><label kind="synchronisation" x="-456" y="-296">external[a]?</label><nail x="-488" y="-280"/><nail x="-344" y="-280"/></transition></template><template><name>Merge_r</name><parameter>const id_b id, const int n, broadcast chan &amp;end, broadcast chan &amp;passEnd</parameter><declaration>int counter = 0;
bool pass = true;</declaration><location id="id20" x="-1088" y="-144"></location><location id="id21" x="-1104" y="-256"></location><location id="id22" x="-1392" y="-192"><committed/></location><location id="id23" x="-1248" y="-192"><committed/></location><location id="id24" x="-1560" y="-192"></location><init ref="id24"/><transition><source ref="id23"/><target ref="id20"/><label kind="guard" x="-1248" y="-168">pass == false</label><label kind="synchronisation" x="-1216" y="-152">end!</label></transition><transition><source ref="id23"/><target ref="id21"/><label kind="guard" x="-1236" y="-254">pass == true</label><label kind="synchronisation" x="-1224" y="-240">passEnd!</label></transition><transition><source ref="id24"/><target ref="id22"/><label kind="synchronisation" x="-1512" y="-128">skip[id]?</label><label kind="assignment" x="-1528" y="-112">counter++</label><nail x="-1560" y="-128"/><nail x="-1392" y="-128"/></transition><transition><source ref="id22"/><target ref="id24"/><label kind="guard" x="-1504" y="-192">counter &lt; n</label></transition><transition><source ref="id24"/><target ref="id22"/><label kind="synchronisation" x="-1504" y="-256">endRel[id]?</label><label kind="assignment" x="-1560" y="-240">counter++, pass = false</label><nail x="-1560" y="-240"/><nail x="-1392" y="-240"/></transition><transition><source ref="id22"/><target ref="id23"/><label kind="guard" x="-1376" y="-192">counter == n</label></transition></template><template><name>Interval_r</name><parameter>broadcast chan &amp;start, const id_b from, broadcast chan &amp;end, const id_b to, const int dur</parameter><declaration>clock t;</declaration><location id="id25" x="-1400" y="-192"><committed/></location><location id="id26" x="-1296" y="-264"></location><location id="id27" x="-1424" y="-264"><name x="-1448" y="-296">w_dur</name><label kind="invariant" x="-1456" y="-248">t &lt;= dur</label></location><location id="id28" x="-1520" y="-264"></location><init ref="id28"/><transition><source ref="id25"/><target ref="id26"/><label kind="synchronisation" x="-1376" y="-184">skip[to]!</label><nail x="-1296" y="-192"/><nail x="-1296" y="-248"/></transition><transition><source ref="id28"/><target ref="id25"/><label kind="synchronisation" x="-1504" y="-184">skip[from]?</label><nail x="-1520" y="-192"/><nail x="-1456" y="-192"/></transition><transition><source ref="id27"/><target ref="id26"/><label kind="guard" x="-1392" y="-280">t == dur</label><label kind="synchronisation" x="-1376" y="-264">end!</label></transition><transition><source ref="id28"/><target ref="id27"/><label kind="synchronisation" x="-1496" y="-280">start?</label><label kind="assignment" x="-1496" y="-264">t = 0</label></transition></template><template><name>Box_i</name><parameter>const id_b id, const int min, const int max, const id_ip a, const id_b p</parameter><declaration>clock t;</declaration><location id="id29" x="-2512" y="-416"><committed/></location><location id="id30" x="-2176" y="-568"></location><location id="id31" x="-2304" y="-568"><committed/></location><location id="id32" x="-2440" y="-568"><name x="-2464" y="-600">w_max</name><label kind="invariant" x="-2472" y="-552">t &lt;= max</label></location><location id="id33" x="-2560" y="-568"><name x="-2570" y="-598">w_min</name><label kind="invariant" x="-2592" y="-552">t &lt;= min</label></location><location id="id34" x="-2688" y="-568"></location><init ref="id34"/><transition><source ref="id34"/><target ref="id29"/><label kind="synchronisation" x="-2680" y="-408">skip[id]?</label><nail x="-2688" y="-416"/></transition><transition><source ref="id29"/><target ref="id30"/><nail x="-2200" y="-416"/></transition><transition><source ref="id32"/><target ref="id29"/><label kind="synchronisation" x="-2432" y="-504">endBox[p]?</label><nail x="-2440" y="-472"/></transition><transition><source ref="id33"/><target ref="id29"/><label kind="synchronisation" x="-2596" y="-507">endBox[p]?</label><nail x="-2512" y="-504"/></transition><transition><source ref="id34"/><target ref="id29"/><label kind="synchronisation" x="-2608" y="-464">endBox[p]?</label><nail x="-2624" y="-472"/></transition><transition><source ref="id31"/><target ref="id30"/><label kind="synchronisation" x="-2288" y="-584">endBox[id]!</label></transition><transition><source ref="id32"/><target ref="id31"/><label kind="synchronisation" x="-2400" y="-624">external[a]?</label><nail x="-2408" y="-608"/><nail x="-2320" y="-608"/></transition><transition><source ref="id32"/><target ref="id31"/><label kind="guard" x="-2408" y="-584">t == max</label></transition><transition><source ref="id33"/><target ref="id32"/><label kind="guard" x="-2536" y="-584">t == min</label></transition><transition><source ref="id34"/><target ref="id33"/><label kind="synchronisation" x="-2672" y="-584">startBox[id]?</label><label kind="assignment" x="-2648" y="-568">t = 0</label></transition></template><template><name>BoxH_r</name><parameter>const id_b id, const int dur, broadcast chan &amp;end, const id_b p</parameter><declaration>clock t;
bool exit = false;</declaration><location id="id35" x="-1168" y="-200"><committed/></location><location id="id36" x="-1112" y="-352"></location><location id="id37" x="-824" y="-392"></location><location id="id38" x="-944" y="-392"><committed/></location><location id="id39" x="-1240" y="-392"><label kind="invariant" x="-1272" y="-376">t &lt;= dur</label></location><location id="id40" x="-1376" y="-392"></location><init ref="id40"/><transition><source ref="id40"/><target ref="id37"/><label kind="synchronisation" x="-1152" y="-480">skip[id]?</label><nail x="-1352" y="-464"/><nail x="-888" y="-464"/></transition><transition><source ref="id39"/><target ref="id38"/><label kind="guard" x="-1168" y="-408">t ==dur &amp;&amp; exit == true</label></transition><transition><source ref="id35"/><target ref="id37"/><nail x="-1000" y="-200"/></transition><transition><source ref="id36"/><target ref="id35"/><label kind="synchronisation" x="-1136" y="-288">endBox[p]?</label></transition><transition><source ref="id39"/><target ref="id35"/><label kind="synchronisation" x="-1312" y="-304">endBox[p]?</label><nail x="-1232" y="-256"/></transition><transition><source ref="id40"/><target ref="id35"/><label kind="synchronisation" x="-1448" y="-288">endBox[p]?</label><nail x="-1368" y="-216"/></transition><transition><source ref="id36"/><target ref="id38"/><label kind="synchronisation" x="-1048" y="-352">end?</label><nail x="-984" y="-352"/></transition><transition><source ref="id39"/><target ref="id36"/><label kind="guard" x="-1320" y="-344">t == dur &amp;&amp; exit == false</label><nail x="-1184" y="-352"/></transition><transition><source ref="id38"/><target ref="id37"/><label kind="synchronisation" x="-928" y="-408">endBox[id]!</label></transition><transition><source ref="id39"/><target ref="id39"/><label kind="synchronisation" x="-1192" y="-440">end ?</label><label kind="assignment" x="-1192" y="-424">exit = true</label><nail x="-1240" y="-440"/><nail x="-1192" y="-424"/></transition><transition><source ref="id40"/><target ref="id39"/><label kind="synchronisation" x="-1352" y="-408">startBox[id]?</label><label kind="assignment" x="-1328" y="-392">t = 0</label></transition></template><template><name>Start_t</name><parameter>const id_b id</parameter><location id="id41" x="-88" y="-32"></location><location id="id42" x="-232" y="-32"><urgent/></location><init ref="id42"/><transition><source ref="id42"/><target ref="id41"/><label kind="synchronisation" x="-208" y="-48">startBox[id]!</label></transition></template><template><name>BoxH_i</name><parameter>const id_b id, const int min, const int max, const id_ip a, const id_b p</parameter><declaration>clock t;</declaration><location id="id43" x="-224" y="120"><committed/></location><location id="id44" x="144" y="-32"></location><location id="id45" x="24" y="-32"><committed/></location><location id="id46" x="-152" y="-32"><label kind="invariant" x="-184" y="-16">t &lt;= max</label></location><location id="id47" x="-288" y="-32"><label kind="invariant" x="-320" y="-16">t &lt;= min</label></location><location id="id48" x="-432" y="-32"></location><init ref="id48"/><transition><source ref="id48"/><target ref="id44"/><label kind="synchronisation" x="-176" y="-112">skip[id]?</label><nail x="-384" y="-96"/><nail x="88" y="-96"/></transition><transition><source ref="id43"/><target ref="id44"/><label kind="synchronisation" x="-72" y="120">endBox[id]!</label><nail x="80" y="120"/></transition><transition><source ref="id46"/><target ref="id43"/><label kind="synchronisation" x="-144" y="48">endBox[p]?</label><nail x="-152" y="64"/></transition><transition><source ref="id47"/><target ref="id43"/><label kind="synchronisation" x="-280" y="32">endBox[p]?</label><nail x="-288" y="64"/></transition><transition><source ref="id48"/><target ref="id43"/><label kind="synchronisation" x="-488" y="48">endBox[p]?</label><nail x="-384" y="112"/></transition><transition><source ref="id46"/><target ref="id45"/><label kind="synchronisation" x="-96" y="0">external[a]?</label><nail x="-88" y="0"/><nail x="-16" y="0"/></transition><transition><source ref="id45"/><target ref="id44"/><label kind="synchronisation" x="40" y="-48">endBox[id]!</label></transition><transition><source ref="id46"/><target ref="id45"/><label kind="guard" x="-104" y="-56">t == max</label></transition><transition><source ref="id47"/><target ref="id46"/><label kind="guard" x="-256" y="-48">t == min</label></transition><transition><source ref="id48"/><target ref="id47"/><label kind="synchronisation" x="-408" y="-48">startBox[id]?</label><label kind="assignment" x="-376" y="-32">t = 0</label></transition></template><template><name>Conditional</name><parameter>const id_b id, const id_ip a, const int dur, const id_b to,  const bool option, const int cond</parameter><declaration>int val;

clock t;</declaration><location id="id49" x="-160" y="-48"><urgent/></location><location id="id50" x="-144" y="-144"><urgent/></location><location id="id51" x="-520" y="-48"></location><location id="id52" x="-224" y="56"><committed/></location><location id="id53" x="48" y="-48"></location><location id="id54" x="-80" y="-48"><label kind="invariant" x="-120" y="-80">t &lt;= dur</label></location><location id="id55" x="-224" y="-48"><committed/></location><location id="id56" x="-368" y="-48"></location><init ref="id51"/><transition><source ref="id49"/><target ref="id54"/><label kind="synchronisation" x="-168" y="-48">startBox[id]!</label></transition><transition><source ref="id50"/><target ref="id53"/><label kind="synchronisation" x="-72" y="-160">skip[to]!</label><nail x="48" y="-144"/><nail x="48" y="-64"/></transition><transition><source ref="id56"/><target ref="id50"/><label kind="synchronisation" x="-304" y="-160">startBox[id]?</label><nail x="-384" y="-88"/><nail x="-384" y="-144"/><nail x="-192" y="-144"/></transition><transition><source ref="id51"/><target ref="id52"/><label kind="synchronisation" x="-608" y="40">timeOut[id]?</label><nail x="-520" y="80"/><nail x="-264" y="80"/></transition><transition><source ref="id51"/><target ref="id56"/><label kind="synchronisation" x="-496" y="-72">listenEvent[id]?</label></transition><transition><source ref="id55"/><target ref="id49"/><label kind="guard" x="-224" y="-80">val == cond</label><label kind="assignment" x="-208" y="-40">t = 0</label></transition><transition><source ref="id54"/><target ref="id53"/><label kind="guard" x="-48" y="-64">t == dur</label><label kind="synchronisation" x="-64" y="-48">startBox[to]!</label></transition><transition><source ref="id52"/><target ref="id53"/><label kind="guard" x="-104" y="80">option == false</label><label kind="synchronisation" x="-72" y="104">skip[to]!</label><nail x="-224" y="104"/><nail x="48" y="104"/></transition><transition><source ref="id52"/><target ref="id54"/><label kind="guard" x="-192" y="32">option == true</label><nail x="-80" y="56"/></transition><transition><source ref="id56"/><target ref="id52"/><label kind="synchronisation" x="-456" y="16">timeOut[id]?</label><nail x="-368" y="56"/></transition><transition><source ref="id55"/><target ref="id56"/><label kind="guard" x="-336" y="-112">val != cond</label><nail x="-224" y="-96"/><nail x="-368" y="-96"/></transition><transition><source ref="id56"/><target ref="id55"/><label kind="synchronisation" x="-344" y="-64">external[a]?</label><label kind="assignment" x="-356" y="-48">val = eventValue[a]</label></transition></template><template><name>Merge_c</name><parameter>const id_b to, int n</parameter><declaration>int counter ;</declaration><location id="id57" x="168" y="24"></location><location id="id58" x="24" y="96"><committed/></location><location id="id59" x="24" y="-24"></location><location id="id60" x="-96" y="-24"><committed/></location><location id="id61" x="-200" y="-24"></location><init ref="id61"/><transition><source ref="id59"/><target ref="id57"/><label kind="synchronisation" x="64" y="-48">startBox[to]?</label><nail x="168" y="-24"/></transition><transition><source ref="id59"/><target ref="id58"/><label kind="synchronisation" x="-64" y="40">timeOut[to]?</label><nail x="24" y="40"/></transition><transition><source ref="id58"/><target ref="id57"/><nail x="168" y="96"/></transition><transition><source ref="id61"/><target ref="id58"/><label kind="synchronisation" x="-216" y="104">timeOut[to]?</label><nail x="-200" y="96"/></transition><transition><source ref="id60"/><target ref="id59"/><label kind="guard" x="-88" y="-48">counter == n</label><label kind="synchronisation" x="-80" y="-24">listenEvent[to]!</label></transition><transition><source ref="id60"/><target ref="id61"/><label kind="guard" x="-184" y="-80">counter &lt; n</label><nail x="-96" y="-64"/><nail x="-200" y="-64"/></transition><transition><source ref="id61"/><target ref="id60"/><label kind="synchronisation" x="-192" y="-8">timeMin[to]?</label><label kind="assignment" x="-192" y="-24">counter++</label></transition></template><system>// Place template instantiations here.

Box_0 = BoxH_r(0,15, endH[0], 0); // id, duration, synchr_end, id_parent

//Box_0 = BoxH_i(0,3,20, 0, 0); // id, min, max, id_ip

Box_1 = Box_r(1,5, 0); // id, dur, parent

Box_2 = Box_r(2,5, 0); // id, dur, parent

Start = Start_t(0);   // id scenario

Event_1 = Event(12,0, 1); // date, id_ip

Rel_1 = Interval_r(startBox[0], 0, startBox[1], 1, 2); // channel (from), from, channel (to), to, dur

Rel_2 = Interval_r(startBox[0], 0, startBox[2], 2, 5); // channel (from), channel(to), dur

Rel_3 = Interval_i(1, 3, 2, 7);

Rel_4 = Interval_i(2, 3, 1, 5);

Control_Cond_1 = Merge_c(3,2);

Cond_1 = Conditional (3, 0, 3, 4, false, 1); // id, id_event, dur_rel, id_to, urgent?, cond_value

Cond_2 = Conditional (3, 0, 5, 5, false, 3); // id, id_event, dur_rel, id_to, urgent?, cond_value

Box_4 = Box_r(4, 7, 0);

Box_5 = Box_r(5, 3, 0);

Rel_7 = Interval_r(endBox[4],4,endRel[0],0,2); 

Rel_8 = Interval_r(endBox[5],5,endRel[0],0,2);


Control_End_Box_0 = Merge_r(0, 2, endH[0], endH[0]); // id, #rel, synchr_end 

// List one or more processes to be composed into a system.
//system Box_0, Start, Box_1, Box_2, Rel_1, Rel_2, Rel_3, Rel_4, Control_End_Box_0 ;

//system Start, Box_0, Box_1, Box_2, Rel_1, Rel_2, Event_1;

system Start, Box_0, Box_1, Box_2, Rel_1, Rel_2, Rel_4, Rel_3, Control_Cond_1, Event_1, Cond_1, Cond_2, Box_4, Box_5, Rel_7, Rel_8,Control_End_Box_0;
</system></nta>